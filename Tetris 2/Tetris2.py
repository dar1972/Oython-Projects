#Author: Dhruv Rajpurohit

import turtle

turtle.speed(0)
"to increase the speed of turtle"

def orientation(row,col):
    turtle.up()
    turtle.forward(10*(col-1))
    turtle.left(90)
    turtle.forward(10*(row-1))
    turtle.right(90)
    turtle.down()

#to get the turtle in a certain position

def draw_board():
    turtle.forward(100)
    turtle.left(90)
    turtle.forward(200)
    turtle.left(90)

#set of code to make the board

def draw_block():
    turtle.begin_fill()
    turtle.forward(10)
    turtle.left(90)
    turtle.forward(10)
    turtle.left(90)
    turtle.forward(10)
    turtle.left(90)
    turtle.forward(10)
    turtle.left(90)
    turtle.end_fill()

#code to make the small block

def draw_cube():
    turtle.fillcolor("Red")
    turtle.begin_fill()
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.left(90)
    turtle.forward(10)
    draw_block()
    turtle.right(90)
    draw_block()
    turtle.end_fill()

#code to make the shapes

def draw_tee():
    turtle.fillcolor("blue")
    turtle.begin_fill()
    draw_block()
    turtle.right(90)
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.left(90)
    turtle.forward(10)
    draw_block()
    turtle.end_fill()

def draw_zed():
    turtle.fillcolor("yellow")
    turtle.begin_fill()
    draw_block()
    turtle.forward(10)
    turtle.left(90)
    turtle.forward(10)
    draw_block()
    turtle.right(180)
    turtle.forward(10)
    turtle.left(90)
    draw_block()
    turtle.right(90)
    draw_block()
    turtle.end_fill()

def draw_zed2():
    turtle.fillcolor("orange")
    turtle.begin_fill()
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.right(180)
    turtle.forward(10)
    turtle.left(90)
    draw_block()
    turtle.right(180)
    turtle.forward(10)
    turtle.right(90)
    turtle.forward(20)
    turtle.left(90)
    draw_block()
    turtle.end_fill()

def draw_el():
    turtle.fillcolor("brown")
    turtle.begin_fill()
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.right(90)
    draw_block()
    turtle.end_fill()

def draw_el2():
    turtle.fillcolor("purple")
    turtle.begin_fill()
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.forward(10)
    turtle.left(90)
    turtle.forward(10)
    draw_block()
    turtle.end_fill()

def draw_straight():
    turtle.fillcolor("green")
    turtle.begin_fill()
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.forward(10)
    draw_block()
    turtle.end_fill()

draw_board()
draw_board()

turtle.up()
turtle.right(180)
turtle.forward(50)
turtle.down()
draw_cube()
turtle.up()
turtle.right(90)
turtle.forward(20)
turtle.down()
draw_el()
turtle.up()
turtle.left(90)
turtle.forward(20)
turtle.down()
draw_tee()
turtle.up()
turtle.forward(20)
turtle.down()
draw_zed()
turtle.up()
turtle.left(90)
turtle.forward(20)
turtle.down()
draw_straight()
turtle.up()
turtle.forward(20)
turtle.down()
draw_zed2()

turtle.right(180)
turtle.up()
turtle.forward(10)
turtle.left(90)
turtle.forward(10)
turtle.down()
draw_el2()

turtle.up()
turtle.right(180)
turtle.forward(10)
turtle.right(90)
turtle.forward(220)
turtle.left(90)
turtle.forward(50)
turtle.down()

draw_board()
draw_board()

draw_cube()

turtle.left(90)
turtle.forward(10)

draw_tee()

turtle.right(90)
turtle.forward(10)
draw_zed()

turtle.right(90)
turtle.forward(10)
turtle.left(90)
draw_el()

turtle.right(180)
turtle.forward(10)
turtle.right(90)
turtle.forward(10)
turtle.left(90)
turtle.forward(10)
turtle.left(90)

draw_tee()

turtle.right(180)
turtle.forward(10)
turtle.left(90)
turtle.forward(10)

draw_cube()

turtle.left(90)
turtle.forward(10)
turtle.right(90)

draw_zed()

turtle.right(90)
turtle.penup()
turtle.forward(40)
turtle.right(90)
turtle.forward(10)
turtle.right(90)
turtle.pendown()
draw_el()

turtle.right(90)
turtle.forward(20)
turtle.right(90)
turtle.forward(10)
turtle.right(90)
draw_straight()

turtle.right(180)
turtle.forward(50)
turtle.left(90)
turtle.forward(10)
turtle.right(180)
draw_straight()

turtle.up()
turtle.left(90)
turtle.forward(30)
turtle.left(90)
turtle.forward(60)
turtle.left(90)
turtle.down()

#the following code is used to input the value if elif condition is used to make the correct shape in desired orrientation
shape=input("Enter a letter{BILJZST} to choose the shape to  place: ")
angle=int(input(" Enter 0,90,180 or 270 for the rotation: "))
row=int(input("Enter row number (0 to 19) for lower left space: "))
col=int(input("Enter column number (0 to 9) for lower left space: "))
orientation(row,col)
if(angle==0):
    if(shape=="B"):
        draw_cube()
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="I"):
        draw_straight()
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="L"):
        draw_el()
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="T"):
        draw_T()
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="Z"):
        draw_zed()
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
elif(angle==90):
    if(shape=="B"):
        turtle.right(90)
        draw_cube()
        turtle.left(90)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="I"):
        turtle.right(90)
        draw_straight()
        turtle.left(90)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="L"):
        turtle.right(90)
        draw_el()
        turtle.left(90)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="T"):
        turtle.right(90)
        draw_T()
        turtle.left(90)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="Z"):
        turtle.right(90)
        draw_zed()
        turtle.left(90)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
elif(angle==180):
    if(shape=="B"):
        turtle.right(180)
        draw_cube()
        turtle.left(180)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="I"):
        turtle.right(180)
        draw_straight()
        turtle.left(180)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="L"):
        turtle.right(180)
        draw_el()
        turtle.left(180)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="T"):
        turtle.right(180)
        draw_tee()
        turtle.left(180)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="Z"):
        turtle.right(180)
        draw_zed()
        turtle.left(180)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
elif(angle==270):
    if(shape=="B"):
        turtle.right(270)
        draw_cube()
        turtle.left(270)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="I"):
        turtle.right(270)
        draw_straight()
        turtle.left(270)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="L"):
        turtle.right(270)
        draw_el()
        turtle.left(270)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="T"):
        turtle.right(270)
        draw_tee()
        turtle.left(270)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()
    elif(shape=="Z"):
        turtle.right(270)
        draw_zed()
        turtle.left(270)
        turtle.up()
        turtle.back(10*(col-1))
        turtle.right(90)
        turtle.forward(10*(row-1))
        turtle.left(90)
        turtle.down()


turtle.done()





